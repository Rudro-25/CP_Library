//1 x y -> all x to be y
//2 idx -> find value of idx
//https://toph.co/p/unbelievable-array

#include <bits/stdc++.h>
using namespace std;

#define      PSB         push_back
#define      MP          make_pair
#define      ll          long long
#define      FastIO      ios::sync_with_stdio(0);cin.tie(0); cout.tie(0);
constexpr ll mod = 1e9  + 7;
const ll N=1e6+5;
const ll INF =1e18;

ll n,m,c;
ll par[N],ind[N],val[N];

int find_set(int v) {
    if (v == par[v])
        return v;
    return par[v] = find_set(par[v]);
}


int main(){
  FastIO

    ll tt; cin>>tt;
    while(tt--){
        cin>>n>>m;  // n nodes and m edges.
        ll a[n+1];
        for(ll i=1;i<=100000;i++) ind[i]=val[i]=par[i]=0;
        for(ll i=1;i<=n;i++){
            cin>>a[i];
            if(!ind[a[i]]) ind[a[i]]=i,val[i]=a[i],par[i]=i;
            else{
                par[i]=ind[a[i]];
            }
        }
        cout<<"Case "<<++c<<":"<<endl;

        while(m--){
            ll t; cin>>t;
            if(t==1){
                ll x,y; cin>>x>>y;
                if(x==y) continue;
                if(!ind[y]){
                    ind[y]=ind[x];
                    ind[x]=0;
                    val[ind[y]]=y;
                }
                else{
                  par[ind[x]]= ind[y];
                  ind[x]=0;   
                }

            }else{
              ll x; cin>>x;
              ll pos= find_set(x);
              cout<<val[pos]<<endl;

            }
        }
    }



  return 0;
}
/*
1
5 4
1 2 3 4 5
1 1 3
2 1
1 3 5
2 1

ans:
Case 1:
3
5
*/
