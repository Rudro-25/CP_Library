//https://www.spoj.com/problems/DQUERY/
//MO's Algo (offline)
//Find no of unique element in a range

#include<bits/stdc++.h>
using namespace std;

#define ll long long
#define BLOCK 555

struct query{
  int l,r,i;
};
query Q[200001];
int ar[30001],ans[200001];
int freq[1000001];
int cnt=0;
bool comp(query a,query b){
  if(a.l/BLOCK != b.l/BLOCK)
   return a.l/BLOCK < b.l/BLOCK;

   return a.r < b.r;
}
// bool comp(query a,query b){
//   int x= a.l/BLOCK;
//   int y= b.l/BLOCK;

//   if(x!=y) return x<y;

//   if(x%2) return a.r<b.r;
//   else return a.r > b.r;
// }
void add(int pos){
  freq[ar[pos]]++;
  if(freq[ar[pos]]==1) cnt++; 
}
void remove(int pos){
  freq[ar[pos]]--;
  if(freq[ar[pos]]==0) cnt--;
}

int main(){
   int Test=1;
   //cin>>Test;
   while(Test--){
       ll n; cin>>n;
       for(ll i=0;i<n;i++) cin>>ar[i];

       ll q; cin>>q;
       for(ll i=0;i<q;i++){
         cin>>Q[i].l>>Q[i].r;
         Q[i].i=i; Q[i].l--,Q[i].r--;
       }

       sort(Q,Q+q,comp);

       ll ML=0,MR=-1;
       for(ll i=0;i<q;i++){
         ll L=Q[i].l;
         ll R=Q[i].r;

         while(ML>L) ML--,add(ML);
         while(MR<R) MR++,add(MR);

         while(ML<L) remove(ML),ML++;
         while(MR>R) remove(MR),MR--;

         ans[Q[i].i]=cnt;
       }

       for(ll i=0;i<q;i++)
        cout<<ans[i]<<endl;
    
   }
   return 0;
}
/*

*/
