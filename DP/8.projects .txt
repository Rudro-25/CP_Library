//https://cses.fi/problemset/task/1140/

#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace std;
using namespace __gnu_pbds;

#define      ll                  long long
#define      pb                 push_back
#define      mp                 make_pair
#define      all(x)             x.begin(),x.end()
#define      Ceil(x,y)           ((x+y-1)/y)
#define      gcd(a,b)            __gcd(a,b)
#define      lcm(a,b)           (a*b)/gcd(a,b)
#define      InTheNameOfGod      ios::sync_with_stdio(0);cin.tie(0); cout.tie(0);

template <typename T>
using ordered_set = tree<T, null_type, less_equal<T>, rb_tree_tag, tree_order_statistics_node_update>;

constexpr ll mod = 1e9 + 7;
const ll N=3e6+5;
vector<pair<ll,ll>> adj[N];

void solve(){
   ll n;
   cin>>n;
   vector<ll> a(n),b(n),p(n);
   map<ll,ll> mpp;
   for(ll i=0;i<n;i++){
      cin>>a[i]>>b[i]>>p[i];
      b[i]++;
      mpp[a[i]]; mpp[b[i]];
   }
   ll val=0;
   for(auto&it: mpp){
      it.second= val++;
   }
   for(ll i=0;i<n;i++){
     adj[mpp[b[i]]].pb(mp(mpp[a[i]],p[i]));
   }

   vector<ll> dp(val,0);
   for(ll i=0;i<val;i++){
     if(i) dp[i]=dp[i-1];

     for(auto j: adj[i]){
       dp[i]= max(dp[i],dp[j.first]+j.second);
     }
   }

   cout<<dp[val-1]<<endl;


}

int main(){
   InTheNameOfGod;
   ll Test=1;
   //cin>>Test;
   while(Test--){
     solve();
    }
  return 0;
}
