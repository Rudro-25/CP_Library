//Longest PALINDROM SUBSEQUENCE
//O(n^2)

#include<bits/stdc++.h>
using namespace std;

#define ll long long
const int N=4e4+1;
const int mod=1e9+7;
ll dp[100][100];
char ch[100];
//dp[i][j]= ch[j-i+1]----ch[j] is palidrome or not
int main(){
   int Test=1;
   //cin>>Test;
   while(Test--){
       ll n; cin>>n;
       for(ll i=1;i<=n;i++) cin>>ch[i];

       for(ll i=0;i<=n;i++) dp[0][i]=dp[1][i]=1;

       for(ll i=2;i<=n;i++){
         for(ll j=i;j<=n;j++){
           if(ch[j]==ch[j-i+1] && dp[i-2][j-1]){
             dp[i][j]=1;
           }
           else dp[i][j]=0;
         }
       }

       for(ll i=0;i<=n;i++){
         for(ll j=0;j<=n;j++){
           cout<<dp[i][j]<<' ';
         }
         cout<<endl;
       }
       
   }
   return 0;
}
/*

*/
