#include <bits/stdc++.h>
using namespace std;

#define      PSB         push_back
#define      ll          long long
#define      FastIO      ios::sync_with_stdio(0);cin.tie(0); cout.tie(0);
constexpr ll mod = 1e9  + 7;
const ll N=3e6+5;

int n,m;
vector<ll> adj[N];  // adjacency list of graph

//0-1 color korte hobe but all adjacence node different hobe. korte parle
// bipartite else no
bool is_bipartite = true;
queue<int> q;
void bipartite(){
 vector<int> side(n, -1);
 for (int st = 0; st < n; ++st) {
    if (side[st] == -1) {
        q.push(st);
        side[st] = 0;
        while (!q.empty()) {
            int v = q.front();
            q.pop();
            for (int u : adj[v]) {
                if (side[u] == -1) {
                    side[u] = side[v] ^ 1;
                    q.push(u);
                } else {
                    is_bipartite &= side[u] != side[v];
                }
            }
        }
     }
  }
}

int main(){
  FastIO

    cin>>n>>m;  // n nodes and m edges.
    for(ll i=0;i<m;i++){
        ll x,y; cin>>x>>y;
        x--,y--;
        adj[x].PSB(y); adj[y].PSB(x);
    }

    bipartite();

  cout << (is_bipartite ? "YES" : "NO") << endl;

  return 0;
}
/*
3 3
1 2
2 1
3 1

ans:
NO  //  made a circle between 1,2,3
*/

