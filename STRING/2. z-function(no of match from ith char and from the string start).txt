//in a vector for every index find how much continuous match from ith charcter and from te start.
//(n^2)- may be O(n)
// 1st index always 0.

#include <bits/stdc++.h>
using namespace std;

#define      PSB         push_back
#define      MP          make_pair
#define      ll          long long
#define      FastIO      ios::sync_with_stdio(0);cin.tie(0); cout.tie(0);
constexpr ll mod = 2038101041;
constexpr ll base=2038079803;
const ll N=3e6+5;
const ll INF =1e18;

vector<int> z_function(string s) {
    int n = (int) s.length();
    vector<int> z(n);
    for (int i = 1, l = 0, r = 0; i < n; ++i) {
        if (i <= r)
            z[i] = min (r - i + 1, z[i - l]);
        while (i + z[i] < n && s[z[i]] == s[i + z[i]])
            ++z[i];
        if (i + z[i] - 1 > r)
            l = i, r = i + z[i] - 1;
    }
    return z;
}

int main(){
  FastIO

  ll test=1; //cin>>test;
  while(test--){
       string s;
       cin>>s;
       vector<int> v = z_function(s);

       for(ll i=0;i<v.size();i++)
         cout<<v[i]<<' ';
       cout<<endl;
  }

  return 0;
}
/*
abab

ans:
0 0 2 0

*/

